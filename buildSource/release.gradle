apply plugin: 'com.android.application'

android {
    compileSdkVersion Integer.valueOf(COMPILE_SDK_VERSION)
    buildToolsVersion BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.maowo.jwrouterdemo"
        minSdkVersion Integer.valueOf(MIN_SDK_VERSION)
        targetSdkVersion Integer.valueOf(TARGET_SDK_VERSION)
        versionCode Integer.valueOf(VERSION_CODE)
        versionName VERSION_NAME
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
//    signingConfigs {
//        signing {
//            storeFile file(rootDir.absolutePath + "")
//            storePassword ""
//            keyAlias ""
//            keyPassword ""
//        }
//    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
//        debug {
//
//        }
    }
    productFlavors {
        product {
            applicationId "com.maowo.jwrouterdemo_a"
            versionCode Integer.valueOf(VERSION_CODE)
            versionName VERSION_NAME
            resValue "string", "app_name", "hello_JW"
//            manifestPlaceholders = [
//
//            ]
        }
    }
    //修改生成的apk名字
    applicationVariants.all { variant ->
//        if (variant.buildType.name == 'release') {
        variant.outputs.each { output ->
            def appName = 'Jw'
            def oldFile = output.outputFile
            def buildName
            def versionCode
            def env = "env"
            def releaseApkName

            variant.productFlavors.each { product ->
                buildName = product.name
                versionCode = product.versionName
            }
//                if (gradle.APP_ENV == '1'){
//                    env = 'release'
//                }else{
//                    env = 'test'
//                }

            releaseApkName = appName + '_' + versionCode + '_' + buildName + '_' + variant.buildType.name + '_' + getDate() + '.apk'
            output.outputFile = new File(oldFile.parent, releaseApkName)
        }
//        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}
